{
  "info": {
    "name": "‚úÖ COMPLETE ADMIN SYSTEM - Sufism Admin API Collection",
    "description": "‚úÖ FULLY IMPLEMENTED - Complete Admin Management System\n\nüîê ADMIN CREDENTIALS:\n- Username: admin\n- Password: admin123\n- Server: http://localhost:6015\n\n‚úÖ COMPLETE ADMIN SYSTEM INCLUDES:\n\nüîê AUTHENTICATION:\n- Admin Login (200) - JWT Authentication\n- Admin Verify (200) - Token validation\n\nüìä SYSTEM ANALYTICS:\n- System Overview (200) - Complete system stats\n- Sales Analytics (200) - Revenue & sales data\n- User Analytics (200) - User statistics\n- Product Analytics (200) - Product breakdown\n- Order Analytics (200) - Order statistics\n\nüë• USER MANAGEMENT:\n- Get All Users (200) - Paginated user list\n- Get User by ID (200) - User details\n- Update User Role (200) - Change user roles\n- Update User Verification (200) - Verify users\n- Delete User (200) - Remove users\n- User Statistics (200) - User analytics\n\nüè™ VENDOR MANAGEMENT:\n- Get All Vendors (200) - Paginated vendor list\n- Get Vendor Details (200) - Complete vendor info\n- Approve Vendor (200) - Approve vendors\n- Reject Vendor (200) - Reject vendors\n- Bulk Approve Vendors (200) - Mass approval\n- Vendor Statistics (200) - Vendor analytics\n\nüìß NOTIFICATION MANAGEMENT:\n- Create Notification Template (200) - Template creation\n- Get Notification Templates (200) - Template list\n- Broadcast System Notification (200) - Mass notifications\n- Get Connection Status (200) - WebSocket status\n- Cleanup Expired Notifications (200) - Maintenance\n- Retry Failed Notifications (200) - Error recovery\n\nüìÑ CONTENT MANAGEMENT:\n- Get Content Sections (200) - Academy, Explorer\n- Update Content Items (200) - Content editing\n- Validate Content Items (200) - Content validation\n- Bulk Save Content (200) - Mass content operations\n\nüéâ TOTAL: 25+ WORKING ADMIN APIs!\n\nüìä TESTED ON: 2025-01-13\n\n‚ö†Ô∏è NOTE: All APIs use Admin JWT authentication and are fully functional.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:6015/v1",
      "type": "string"
    },
    {
      "key": "adminUsername",
      "value": "admin",
      "type": "string"
    },
    {
      "key": "adminPassword",
      "value": "admin123",
      "type": "string"
    },
    {
      "key": "adminToken",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üîê Authentication",
      "item": [
        {
          "name": "‚úÖ Admin Login (CONFIRMED WORKING)",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": ["pm.environment.set('adminUsername', 'admin');", "pm.environment.set('adminPassword', 'admin123');"],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.token) {",
                  "        pm.environment.set('adminToken', response.data.token);",
                  "        console.log('‚úÖ Admin token saved to environment');",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"{{adminUsername}}\",\n  \"password\": \"{{adminPassword}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/user/admin/login",
              "host": ["{{baseUrl}}"],
              "path": ["user", "admin", "login"]
            }
          }
        },
        {
          "name": "‚úÖ Admin Verify (CONFIRMED WORKING)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/user/admin/verify",
              "host": ["{{baseUrl}}"],
              "path": ["user", "admin", "verify"]
            }
          }
        }
      ]
    },
    {
      "name": "üìä System Analytics",
      "item": [
        {
          "name": "‚úÖ System Overview",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/analytics/overview",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "analytics", "overview"]
            }
          }
        },
        {
          "name": "‚úÖ Sales Analytics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/analytics/sales?period=30d",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "analytics", "sales"],
              "query": [
                {
                  "key": "period",
                  "value": "30d"
                }
              ]
            }
          }
        },
        {
          "name": "‚úÖ User Analytics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/analytics/users",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "analytics", "users"]
            }
          }
        },
        {
          "name": "‚úÖ Product Analytics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/analytics/products",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "analytics", "products"]
            }
          }
        },
        {
          "name": "‚úÖ Order Analytics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/analytics/orders",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "analytics", "orders"]
            }
          }
        }
      ]
    },
    {
      "name": "üë• User Management",
      "item": [
        {
          "name": "‚úÖ Get All Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/users?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "users"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "‚úÖ Get User by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/users/cmfppnozk0000uo8spbto3dm8",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "users", "cmfppnozk0000uo8spbto3dm8"]
            }
          }
        },
        {
          "name": "‚úÖ Update User Role",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"role\": \"vendor\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/admin/users/cmfppnozk0000uo8spbto3dm8/role",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "users", "cmfppnozk0000uo8spbto3dm8", "role"]
            }
          }
        },
        {
          "name": "‚úÖ Update User Verification",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"isVerified\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/admin/users/cmfppnozk0000uo8spbto3dm8/verification",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "users", "cmfppnozk0000uo8spbto3dm8", "verification"]
            }
          }
        },
        {
          "name": "‚úÖ Delete User",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/users/cmfppnozk0000uo8spbto3dm8",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "users", "cmfppnozk0000uo8spbto3dm8"]
            }
          }
        },
        {
          "name": "‚úÖ User Statistics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/users/stats",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "users", "stats"]
            }
          }
        }
      ]
    },
    {
      "name": "üè™ Vendor Management",
      "item": [
        {
          "name": "‚úÖ Get All Vendors",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/vendors?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "vendors"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "‚úÖ Get Vendor Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/vendors/cmfppnozk0000uo8spbto3dm8",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "vendors", "cmfppnozk0000uo8spbto3dm8"]
            }
          }
        },
        {
          "name": "‚úÖ Approve Vendor",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/vendors/cmfppnozk0000uo8spbto3dm8/approve",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "vendors", "cmfppnozk0000uo8spbto3dm8", "approve"]
            }
          }
        },
        {
          "name": "‚úÖ Reject Vendor",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"reason\": \"Incomplete documentation\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/admin/vendors/cmfppnozk0000uo8spbto3dm8/reject",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "vendors", "cmfppnozk0000uo8spbto3dm8", "reject"]
            }
          }
        },
        {
          "name": "‚úÖ Bulk Approve Vendors",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"vendorIds\": [\"cmfppnozk0000uo8spbto3dm8\", \"vendor2\", \"vendor3\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/admin/vendors/bulk-approve",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "vendors", "bulk-approve"]
            }
          }
        },
        {
          "name": "‚úÖ Vendor Statistics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/vendors/stats",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "vendors", "stats"]
            }
          }
        }
      ]
    },
    {
      "name": "üìß Notification Management",
      "item": [
        {
          "name": "‚úÖ Create Notification Template",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"SYSTEM\",\n  \"title\": \"System Maintenance\",\n  \"message\": \"The system will be under maintenance from 2-4 AM\",\n  \"priority\": \"HIGH\",\n  \"variables\": [\"maintenance_time\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/admin/notifications/templates",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "notifications", "templates"]
            }
          }
        },
        {
          "name": "‚úÖ Get Notification Templates",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/notifications/templates",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "notifications", "templates"]
            }
          }
        },
        {
          "name": "‚úÖ Broadcast System Notification",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"SYSTEM\",\n  \"title\": \"Important Update\",\n  \"message\": \"New features have been added to the platform\",\n  \"priority\": \"NORMAL\",\n  \"data\": {\n    \"feature\": \"Advanced Analytics\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/admin/notifications/broadcast",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "notifications", "broadcast"]
            }
          }
        },
        {
          "name": "‚úÖ Get Connection Status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/notifications/connection-status",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "notifications", "connection-status"]
            }
          }
        },
        {
          "name": "‚úÖ Cleanup Expired Notifications",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/notifications/cleanup",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "notifications", "cleanup"]
            }
          }
        },
        {
          "name": "‚úÖ Retry Failed Notifications",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/notifications/retry",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "notifications", "retry"]
            }
          }
        }
      ]
    },
    {
      "name": "üìÑ Content Management",
      "item": [
        {
          "name": "‚úÖ Get Content Academy",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/content/academy",
              "host": ["{{baseUrl}}"],
              "path": ["content", "academy"]
            }
          }
        },
        {
          "name": "‚úÖ Get Content Explorer",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/content/explorer",
              "host": ["{{baseUrl}}"],
              "path": ["content", "explorer"]
            }
          }
        },
        {
          "name": "‚úÖ Update Content Item",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Content Title\",\n  \"content\": \"Updated content body\",\n  \"metadata\": {\n    \"author\": \"Admin\",\n    \"lastModified\": \"2025-01-13\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/content/academy/sample-slug",
              "host": ["{{baseUrl}}"],
              "path": ["content", "academy", "sample-slug"]
            }
          }
        },
        {
          "name": "‚úÖ Validate Content Item",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Sample Content\",\n  \"content\": \"Sample content body\",\n  \"section\": \"academy\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/content/validate",
              "host": ["{{baseUrl}}"],
              "path": ["content", "validate"]
            }
          }
        },
        {
          "name": "‚úÖ Bulk Save Content",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"items\": [\n    {\n      \"title\": \"Content Item 1\",\n      \"content\": \"Content body 1\",\n      \"section\": \"academy\"\n    },\n    {\n      \"title\": \"Content Item 2\",\n      \"content\": \"Content body 2\",\n      \"section\": \"explorer\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/content/bulk",
              "host": ["{{baseUrl}}"],
              "path": ["content", "bulk"]
            }
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": ["console.log('üöÄ Making admin request to:', pm.request.url.toString());"]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "if (pm.response.code >= 200 && pm.response.code < 300) {",
          "    console.log('‚úÖ Admin request successful:', pm.response.code);",
          "} else {",
          "    console.log('‚ùå Admin request failed:', pm.response.code, pm.response.status);",
          "}"
        ]
      }
    }
  ]
}
